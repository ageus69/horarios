{"version":3,"sources":["firstStep.js","App.js","index.js"],"names":["echoSocketUrl","window","location","protocol","socketProtocol","mapDias","Step1","useState","messageFromServer","setMessageFromServer","isSetMaterias","setIsSetMaterias","isProcessing","setIsProcessing","noMaterias","setNoMaterias","noEpochs","setNoEpochs","noHorarios","setNoHorarios","calendario","setCalendario","inputs","setInputs","resultados","setResultados","setSocketConst","className","id","colSpan","type","min","max","value","onChange","e","target","list","i","push","onClick","preventDefault","alert","document","getElementById","socket","WebSocket","onmessage","data","length","JSON","parse","obj","auxid","toString","arrayHours","hf","hi","array01","array02","array04","array05","claseKey","clase","clases","color","Math","floor","random","diaKey","dias","dia","find","elemento","style","backgroundColor","nrc","profe","horaI","horaF","key","console","log","array03","j","currentKey","res","align","map","hour","index","el","a","onopen","send","stringify","body","epochs","cal","App","Component","ReactDom","render","StrictMode"],"mappings":"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","file":"static/js/main.9171d54d.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport './index.css'\r\n\r\nconst socketProtocol = (window.location.protocol === 'https:' ? 'wss:' : 'ws:')\r\nconst echoSocketUrl = socketProtocol + '//' + 'ia-server-horarios.herokuapp.com'\r\n//const echoSocketUrl = socketProtocol + '//' + 'localhost:3001'\r\nconst mapDias = ['L', 'M', 'I', 'J', 'V', 'S']\r\n\r\nfunction Step1 () {\r\n  const [messageFromServer, setMessageFromServer] = useState('')\r\n  const [isSetMaterias, setIsSetMaterias] = useState(false)\r\n  const [isProcessing, setIsProcessing] = useState(false)\r\n  const [noMaterias, setNoMaterias] = useState(0)\r\n  const [noEpochs, setNoEpochs] = useState(0)\r\n  const [noHorarios, setNoHorarios] = useState(0)\r\n  const [calendario, setCalendario] = useState(0)\r\n  const [inputs, setInputs] = useState([])\r\n  const [resultados, setResultados] = useState([])\r\n  const [resultadosObjt, setResultadosObjt] = useState([])\r\n  const [socketConst, setSocketConst] = useState(null)\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (noMaterias < 2 || noMaterias > 8) {\r\n      alert('No son suficientes materias, seleccione entre 2 y 8')\r\n      return\r\n    }\r\n\r\n    for (let i=0; i<noMaterias; i++) {\r\n      if(document.getElementById(`inp${i}`).value === '') {\r\n        alert('Algunos campos no estan llenos')\r\n        return\r\n      }\r\n    }\r\n\r\n    if(noEpochs < 1 || noEpochs > 1000) {\r\n      alert('Selecciona de entre 1 a 100 epocas')\r\n      return\r\n    }\r\n    let list = []\r\n    for (let i=0; i<noMaterias; i++) {\r\n      list.push(document.getElementById(`inp${i}`).value)\r\n    }\r\n\r\n    setIsSetMaterias(true)\r\n    setIsProcessing(true)\r\n\r\n    var socket = new WebSocket(echoSocketUrl, 'echo-protocol');\r\n    socket.onmessage = e => {\r\n      if(e.data.length === 0){\r\n        return\r\n      }\r\n      var data = JSON.parse(e.data)\r\n      if(data['type'] === 'status') {\r\n        setMessageFromServer(data['body'])\r\n      }\r\n      if(data['type'] === 'horario') {\r\n        setNoHorarios(noHorarios + 1) // Add to schedule counter\r\n\r\n        let obj = JSON.parse(data['body'])\r\n        obj.id = data['key']\r\n        let auxid = obj.id.toString()\r\n\r\n        let arrayHours = []\r\n        for (let i=0; i<(obj.hf-obj.hi); i++) {\r\n          arrayHours.push(obj.hi + i)\r\n        }\r\n\r\n\r\n        let array01 = [] // Los cuadros que tienen materia\r\n        let array02 = [] // Las rows\r\n        let array04 = [] // Clases para segunda tabla\r\n        let array05 = []\r\n\r\n        for (let claseKey in obj.clases) {\r\n          let clase = obj.clases[claseKey]\r\n          let color = '#'+Math.floor(Math.random()*16777215).toString(16)\r\n          for (let diaKey in clase.dias) {\r\n            let dia = clase.dias[diaKey]\r\n            let res = array05.find(elemento => elemento === claseKey)\r\n            if(res){}\r\n            else{\r\n              array05.push(claseKey)\r\n              array04.push((\r\n                <tr style={{backgroundColor: color}}>\r\n                  <td>{claseKey}</td>\r\n                  <td>{clase.nrc}</td>\r\n                  <td>{clase.profe}</td>\r\n                </tr>\r\n              ))\r\n            }\r\n            for (let i=dia.horaI; i<dia.horaF; i++) {\r\n              let key = diaKey + (i+7)\r\n              array01.push([key, <td key={key} style={{backgroundColor: color}}>{claseKey}</td>])\r\n            }\r\n          }\r\n        }\r\n        console.log(array01)\r\n\r\n        \r\n        for (let i=0; i<mapDias.length; i++) { // Por cada dia\r\n          let array03 = [] // Los td de la current row\r\n          \r\n          for (let j=obj.hi; j<obj.hf; j++) {\r\n            \r\n            let currentKey = mapDias[i] + j.toString()\r\n            let res = array01.find(elemento => elemento[0] === currentKey)\r\n            console.log(currentKey)\r\n            if(res)  \r\n              array03.push(res[1])\r\n            else\r\n              array03.push(<td key={currentKey}></td>)\r\n          }\r\n          array02.push(array03) // Row based in the current i day          \r\n        }\r\n\r\n        setResultados(resultados => [...resultados, \r\n          <tr key={auxid} align='center'>\r\n            <td>\r\n              <div className='tableTrContainer'>\r\n                <table className='tableSchedule'>\r\n                  <tbody>\r\n                    <tr>\r\n                      <th></th>\r\n                      {arrayHours.map(hour => <td key={hour}>{hour}</td>)}\r\n                    </tr>\r\n\r\n                    {mapDias.map((dia, index) => <tr key={dia}>\r\n                        <th>\r\n                          {dia}\r\n                        </th>\r\n                          {array02[index].map(el => el)}\r\n                    </tr>)}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </td>\r\n            <td>\r\n              <div className='tableTrContainer'>\r\n                <table className='tableSchedule'>\r\n                  <tr>\r\n                    <th>Clase</th>\r\n                    <th>Nrc</th>\r\n                    <th>Profe</th>\r\n                  </tr> \r\n                  {array04.map(a => a)}\r\n                </table>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        ])\r\n        \r\n      }\r\n    } \r\n    socket.onopen = function () {\r\n      socket.send(JSON.stringify({type:'postMaterias', body:list, epochs:noEpochs, cal:calendario}))\r\n    };\r\n    setSocketConst(socket)\r\n  }\r\n  \r\n\r\n  if(!isSetMaterias) {\r\n    return (\r\n      <>\r\n        <table className='table'>\r\n          <tbody>\r\n            <tr>\r\n              <th id='HeaderTable' colSpan='4'>\r\n                Horarios APP\r\n              </th>\r\n            </tr>\r\n            \r\n            <tr>\r\n              <th>\r\n                No. Materias\r\n              </th>\r\n              <td>\r\n                <input \r\n                type='number'\r\n                min='2'\r\n                max='8' \r\n                value={noMaterias}\r\n                onChange={(e) => {\r\n                  setNoMaterias(e.target.value)\r\n                  const list = []\r\n                  for (let i=0; i<e.target.value; i++) {\r\n                    list.push(<input type='text' id={`inp${i}`} key={i} />)\r\n                  }\r\n                  setInputs(list)\r\n                }}/>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>Epochs</th>\r\n              <td>\r\n                <input \r\n                type='number' \r\n                id='epcInp'\r\n                value={noEpochs}\r\n                onChange={(e) => setNoEpochs(e.target.value)} />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>Calendario</th>\r\n              <td>\r\n                <input \r\n                type='text' \r\n                id='epcInp'\r\n                value={calendario}\r\n                onChange={(e) => setCalendario(e.target.value)} />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>Claves</th>\r\n              <td>{inputs}</td>\r\n            </tr>\r\n            <tr>\r\n              <th></th>\r\n              <td><button onClick={handleSubmit}>Encontrar horarios</button></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    )\r\n  }\r\n  else if(isProcessing && messageFromServer !== 'finished') {\r\n    return (\r\n      <>\r\n        <table className='table'>\r\n          <tbody>\r\n            <tr>\r\n              <th id='HeaderTable' colSpan='4'>\r\n                Horarios APP proceso\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th>\r\n                Generation\r\n              </th>\r\n              <td>\r\n                {messageFromServer || 0}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    )\r\n  }\r\n\r\n  else {\r\n    return (\r\n      <>\r\n        <table className='tableSchedule'>\r\n          <tbody>\r\n            <tr>\r\n              <th id='HeaderTable' colSpan='4'>\r\n                Horarios APP resultados\r\n              </th>\r\n            </tr>\r\n            {resultados}\r\n          </tbody>\r\n        </table> \r\n      </>\r\n    )\r\n  }\r\n  \r\n\r\n}\r\n\r\nexport default Step1","import React, { Component } from 'react'\r\nimport Step1 from './firstStep'\r\n\r\nclass App extends Component {\r\n  \r\n    \r\n  render() {\r\n    return (\r\n      <div className=\"forma\">\r\n        <Step1/>\r\n      </div>\r\n    )\r\n  }   \r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDom.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}